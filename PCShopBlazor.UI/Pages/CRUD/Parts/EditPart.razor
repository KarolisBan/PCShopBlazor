@page "/parts/edit/{PartId:int}"
@using PCShopBlazor.Extension.ViewModels;
@using PCShopBlazor.UI.Services;

@inject ShopService shopService
@inject NavigationManager navManager


<div class="loader" style="@($"opacity: {(loaded ? 0 : 1)};")"></div>

@if (!isAdmin)
{
    <h2>Oops! This user is unauthorized to view this page. (403)</h2>
}
else if (notFound)
{
    <h2>Oops! The building does not exist! (404)</h2>
}
else
{
    <h2>Edit an existing part</h2>

    @if (loaded)
    {
        <div class="edit-table">
            <div>
                <h3>Manufacturer</h3>
                <input type="text" class="styled-input" placeholder="Manufacturer" spellcheck="false" @bind-value="editedPart.Manufacturer" />
            </div>
            <div>
                <h3>Type</h3>
                <input type="text" class="styled-input" placeholder="Type" spellcheck="false" @bind-value="editedPart.Type" />
            </div>
            <div>
                <h3>Model</h3>
                <input type="text" class="styled-input" placeholder="Model" spellcheck="false" @bind-value="editedPart.Model" />
            </div>
            <div>
                <h3>Value</h3>
                <input type="number" class="styled-input" min="1" placeholder="Value" spellcheck="false" @bind-value="editedPart.Value" />
            </div>
            <div>
                <h3>Client</h3>
                <select  @bind="editedPart.CreatorId" name="Client">
                    @foreach (UserViewModel user in users)
                    {
                        <option value="@user.Id">@user.Name</option>
                    }
                </select>
            </div>
            <div>
                <h3>PC</h3>
                <select  @bind="editedPart.ComputerId" name="Computer">
                    @foreach (ComputerViewModel computer in computers)
                    {
                        <option value="@computer.Id">@computer.Name</option>
                    }
                </select>
            </div>
            <div>
                <button @onclick="EditCurrentPart" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    }
}





@code {

    [Parameter] public int PartId { get; set; }
    PartViewModel editedPart;
    IEnumerable<UserViewModel> users;
    IEnumerable<ComputerViewModel> computers;

    bool isAdmin;

    bool loaded = false;
    bool notFound = false;

    protected override async Task OnInitializedAsync()
    {
        isAdmin = await shopService.CheckAdmin();
        editedPart = await shopService.GetPartsAsync(PartId);
        users = await shopService.GetUsersAsync();
        computers = await shopService.GetComputersAsync();
        if (editedPart is null)
        {
            notFound = true;
        }
        loaded = true;
        
    }

    protected async void EditCurrentPart()
    {
        var response = await shopService.UpdatePartAsync(editedPart);
        navManager.NavigateTo("/parts");
    }
}
