@page "/parts"

@using PCShopBlazor.Extension.ViewModels;
@using PCShopBlazor.UI.Services;
<!--@using RoomRental.Domain.Entities.RoomRental;
@using RoomRental.UI.Modals; -->
<!-- inject LoginService loginService -->
@inject ShopService shopService
@inject NavigationManager navManager

<h2>Parts</h2>

@if (isAdmin)//loginService.IsLoggedIn && loginService.LoggedInUser.Role == "Administrator")
{
    <NavLink href="parts/add">
        <img src="images/add.svg" class="image-svg image-svg-add" />
    </NavLink>
    <br />
    <br />
}

@if (parts != null)
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    Manufacturer
                </th>
                <th>
                    Model
                </th>
                <th>
                    Type
                </th>
                <th>
                    Value
                </th>
                @if (isAdmin)
                {
                    <th>
                        Edit
                    </th>
                    <th>
                        Remove
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var part in parts)
            {
                <tr>
                    <td>
                        @part.Manufacturer
                    </td>
                    <td>
                        @part.Model
                    </td>
                    <td>
                        @part.Type
                    </td>
                    <td>
                        @part.Value
                    </td>
                    @if (isAdmin)
                    {
                        <td>
                            <NavLink href="@($"parts/edit/{part.Id}")">
                                <img src="images/edit.svg" class="image-svg" />
                            </NavLink>
                        </td>
                        <td>
                            <img src="images/delete.svg" class="image-svg" @onclick="e => IsModalOpened = true" />

                            @if (false /*SelectedButton != null*/)
                            {
                                <p>Deleted ir refreshintis uz 2s</p>
                            }
                            <Modal @bind-Open="IsModalOpened" Close="OnClose">
                                <form method="dialog">
                                    <p>
                                        Do you really want to delete this?
                                    </p>
                                    <menu>
                                        <button value="cancel">Cancel</button>
                                        <button value="@part.Id">I'm sure</button>
                                    </menu>
                                </form>
                            </Modal>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {

    IEnumerable<PartViewModel> parts;
    public bool IsModalOpened { get; set; }
    public string SelectedButton { get; set; }
    bool isAdmin;


    protected override async Task OnInitializedAsync()
    {
        //loginService.ReloadUI += async () => await InvokeAsync(() => StateHasChanged());

        parts = await shopService.GetPartsAsync();
        isAdmin = await shopService.CheckAdmin();
    }

    async void OnClose(string value)
    {
        SelectedButton = value;
        if (SelectedButton != "cancel" && SelectedButton != "")
        {
            await shopService.DeletePartAsync(Int32.Parse(SelectedButton));
            navManager.NavigateTo("/parts", forceLoad: true);
        }
    }
}
